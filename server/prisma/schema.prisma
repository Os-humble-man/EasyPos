generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Logs {
  id         Int      @id @default(autoincrement())
  user_id    Int
  action     String   @db.Text
  created_at DateTime @default(now()) @db.Timestamp(6)
  users      Users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict)

  @@index([user_id], name: "user_id")
}

model Payments {
  id             Int           @id @default(autoincrement())
  noPlaque       String        @db.VarChar(255)
  tax_id         Int
  agent_id       Int
  pos_id         Int
  amount         Decimal       @db.Decimal(10, 2)
  reason         String        @db.Text
  payment_method PaymentMethod @default(cash)
  payment_date   DateTime      @default(now()) @db.Timestamp(6)
  users          Users         @relation(fields: [agent_id], references: [id], onDelete: Cascade, onUpdate: Restrict) // Relation obligatoire
  pos_devices    PosDevices    @relation(fields: [pos_id], references: [id], onDelete: Cascade, onUpdate: Restrict)
  taxes          Taxes         @relation(fields: [tax_id], references: [id], onDelete: Cascade, onUpdate: Restrict)

  @@index([agent_id], name: "agent_id")
  @@index([pos_id], name: "pos_id")
  @@index([tax_id], name: "tax_id")
}

model Permissions {
  id               Int                @id @default(autoincrement())
  name             String             @unique @db.VarChar(255)
  user_permissions UserPermissions[]
}

model PosDevices {
  id          Int        @id @default(autoincrement())
  agent_id    Int
  device_name String     @db.VarChar(255)
  location    String?    @db.VarChar(255)
  status      PosStatus  @default(active)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  payments    Payments[]
  users       Users      @relation(fields: [agent_id], references: [id]) // Relation avec Users
}

model Taxes {
  id         Int        @id @default(autoincrement())
  name       String     @unique @db.VarChar(255)
  type       TaxesType
  amount     Decimal?   @db.Decimal(10, 2)
  created_at DateTime   @default(now()) @db.Timestamp(6)
  payments   Payments[]
}

model UserPermissions {
  user_id       Int
  permission_id Int
  users         Users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict)
  permissions   Permissions @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: Restrict)

  @@id([user_id, permission_id])
  @@index([permission_id], name: "permission_id")
}

model Users {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(255)
  last_name        String             @db.VarChar(255)
  email            String             @unique @db.VarChar(255)
  password         String             @db.VarChar(255)
  role             UsersRole          @default(agent)
  status           UsersStatus        @default(active)
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  logs             Logs[]
  payments         Payments[]
  user_permissions UserPermissions[]
  refreshTokens    RefreshToken[]
  posDevices       PosDevices[]       // Relation avec PosDevices
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  token     String   @unique
  expiresAt DateTime
  user      Users    @relation(fields: [userId], references: [id])
}

enum TaxesType {
  fixed
  variable
}

enum UsersRole {
  admin
  agent
}

enum UsersStatus {
  active
  inactive
}

enum PosStatus {
  active
  inactive
}

enum PaymentMethod {
  cash
  card
  mobile_money
  other
}